template(name='questions')
    .ui.stackable.padded.grid
        .row
            .six.wide.column
                .ui.inline.header 
                    |questions
                .ui.icon.button.add_question(title='add question')
                    i.plus.icon
                +question_cloud
            .ten.wide.column
                if currentUser
                    |view 
                    .ui.button.view_answered(class=view_answered_class) answered
                    .ui.button.view_unanswered(class=view_unanswered_class) unanswered
                    if view_answered_class
                        .ui.button.view_correct(class=view_correct_class) got correct
                        .ui.button.view_incorrect(class=view_incorrect_class) got incorrect
                each questions
                    +question_segment


template(name='question_cloud')
    div
    //- #cloud
        //- .ui.left.icon.input
        //-     i.search.icon
        //-     +inputAutocomplete settings=settings id="search" class="" autocomplete="off" 
        // .ui.hidden.fitted.divider
    //- i.grey.tags.icon
    //- .ui.inline.header tags
    if selected_question_tags
        #clear_tags.ui.active.icon.large.button
            i.remove.icon
        each selected_question_tags
            .unselect_question_tag.ui.active.large.button
                strong #{this}
    each all_question_tags
        .ui.compact.large.button.select_question_tag(class=cloud_tag_class) 
            strong #{this.name}



template(name='question_segment')
    //- .ui.card    
    .ui.segment
        img.ui.fluid.image(src="{{c.url question_image_id width=400 height=200 crop='fill'}}")
        .content
            a.ui.header(href="/question/#{_id}/view") #{title}
            div
            each tags
                .ui.basic.label #{this}
            div
            if show_before_test
                .ui.header 
                    |choices
                .ui.large.bulleted.list
                    each choices
                        .item
                            |!{content}
            if my_answer
                .ui.header my answer
                with my_answer
                    .ui.small.header #{when} by #{_author_username}
            .ui.list 
                .item #{answer_count} answers
                    if question.has_correct_answer
                        .item #{incorrect_count} incorrect 
                        .item #{correct_count} correct 
                if is_multiple_choice    
                    //- .item #{choice_count} choices
                    each answer_selections 
                        .item #{choice_content}: #{choice_selection_count} (#{choice_percent}%)
                .item correct users
                    each correct_user_ids
                        |#{this}
                .item incorrect users
                    each incorrect_user_ids
                        |#{this}
                .item upvoting users
                    each upvoter_ids
                        |#{this}
                .item downvoting users
                    each downvoter_ids
                        |#{this}
            if points 
                span #{points} points (#{upvotes} up, #{downvotes} down)
        a.ui.large.button(href="/question/#{_id}/view")
            |view
        



template(name='question_view')
    with current_doc
        .ui.stackable.padded.grid
            .row
                .four.wide.column
                    a.ui.fluid.button(href="/questions")
                        i.chevron.left.icon
                        |questions
                    .ui.header question view 
                    +image_view key='question_image_id' label='image' direct=true
                    a.ui.fluid.button(href="/question/#{_id}/edit")
                        |edit
                    .ui.small.header settings 
                        if has_answer_limit
                            p answer limit #{answer_limit}
                    +comments
                    +voting_full
                .six.wide.column
                    .ui.header #{title}
                    if show_before_test
                        .ui.header 
                            |choices
                        each choices
                            .ui.segment(class=answer_segment_class)
                                .ui.header 
                                    |!{content}
                    if my_answer
                        .ui.header my answer
                        with my_answer
                            .ui.small.header #{when} by #{_author_username}
                    .ui.header stats
                    .ui.button.calc_stats
                        |calc stats
                    .ui.list 
                        .item #{answer_count} answers
                        if has_correct_answer
                            .item #{incorrect_count} incorrect 
                            .item #{correct_count} correct 
                        if is_multiple_choice    
                            .item #{choice_count} choices
                            each answer_selections 
                                .item #{choice_content}: #{choice_selection_count} (#{choice_percent}%)
                .six.wide.column
                    if can_answer
                        .ui.fluid.button.new_answer_session
                            |answer
                    .ui.header
                        |all answers
                    .ui.link.list
                        each answer_sessions
                            a.item(href="/answer_session/#{_id}/view")
                                .content 
                                    .header #{number_answer} #{text_answer} #{choice_selection_content}
                                    .description
                                        |#{when} by #{_author_username}
                                        if is_correct_answer
                                            i.checkmark.large.icon(title='correct')
                                        else 
                                            i.remove.large.icon(title='incorrect')
                                        if is_admin 
                                            +remove_button
                    .ui.inline.header
                        | bounties
                    .ui.icon.button.offer_bounty(title='offer bounty')
                        i.plus.icon
                    each bounties
                        .ui.segment
                            a.ui.header(href="/bounty/#{_id}/view")
                                |#{when}
                            div
                            +number_view key='total_amount' label='total amount' direct=true
                            div
                            +number_view key='amount_per_answer' label='amount per answer' direct=true
                        if can_accept 
                            .ui.green.button.accept accept

template(name='question_stats')
    //- .ui.accordion
    //-     .title
    .ui.header.refresh_question_stats
        i.line.chart.icon
        |stats
    //- i.dropdown.icon
    //- .content
    .ui.big.list
        .item #{views} views
        .item #{reservation_count} reservations
        .item #{total_earnings}c/#{total_question_hours}hrs total
        .item #{average_question_cost}c / #{average_question_duration}hrs avg question
        //- .item question ranking # reservations
        //- .item question ranking $ earned
        //- .item # different renters
        //- .item avg daily earnings
        //- .item avg weekly earnings
        //- .item avg monthly earnings
        //- .item biggest renter
        //- .item predicted payback duration 
        //- .item predicted payback date 

    //-     //- .ui.header res slot exists
    //-     +reservation_slot_template
    //- else
    //-     if is_product_author
    //-         .ui.button.new_slot
    //-             |new slot
        
