head
    title dao
    meta(name='viewport', content='user-scalable=yes, initial-scale=1.0, maximum-scale=1.0, width=device-width')
    meta(name='apple-mobile-web-app-capable', content='yes')
    meta(name='apple-mobile-web-app-status-bar-style', content='black')
    meta(name="msapplication-TileColor" content="#da532c")
    meta(name="theme-color" content="#000000")
    link(rel='stylesheet' type='text/css' href='https://cdn.jsdelivr.net/npm/fomantic-ui@2.7.4/dist/semantic.min.css')
    link(href="https://fonts.googleapis.com/css?family=Ubuntu:300,400&display=swap" rel="stylesheet")

    script(src='https://cdn.jsdelivr.net/npm/jquery@3.3.1/dist/jquery.min.js')
    script(src='https://cdn.jsdelivr.net/npm/fomantic-ui@2.7.4/dist/semantic.min.js')


template(name='layout')
    +nav
    +yield



template(name='not_found')
    .ui.center.aligned.padded.segment
        .ui.center.aligned.header page not found
        a.ui.button(href="/") 
            i.home.icon
            |home




template(name='voting_full')
    i.thumbs.up.big.circular.link.upvote.icon(class=upvote_class)
    i.thumbs.down.big.circular.link.downvote.icon(class=downvote_class)




template(name='nav')
    .ui.grid
        .row
            .center.aligned.sixteen.wide.column
                a.ui.icon.large.circular.button(href='/')
                    i.yin.yang.large.icon
                .ui.big.circular.label  
                    +loginButtons     
                if currentUser      
                    .ui.icon.circular.button.add_question(title='add question')
                        i.large.plus.icon   

template(name='question_cloud')
    //- #cloud
        //- .ui.left.icon.input
        //-     i.search.icon
        //-     input#search(type='text' placeholder='search')
            //- +inputAutocomplete settings=settings id="search" class="" autocomplete="off" 
    .ui.inline.grey.header
        i.user.outline.icon
    if selected_upvoters
        #clear_upvoters.ui.active.icon.large.compact.button
            i.remove.icon
        each selected_upvoters
            .unselect_upvoter.ui.active.large.compact.button
                strong #{this}
    each all_upvoters
        .ui.large.compact.button.select_upvoter(class=cloud_upvoter_class) 
            strong #{this.name}
    .spacer
    .ui.inline.grey.header
        i.tag.icon
    if selected_tags
        #clear_tags.ui.active.icon.circular.large.compact.button
            i.remove.icon
        each selected_tags
            .unselect_tag.ui.active.circular.large.compact.button
                strong #{this}
    each all_tags
        .ui.circular.large.compact.button.select_tag(class=cloud_tag_class) 
            strong #{this.name}


template(name='question_segment')
    //- .ui.card    
    .ui.center.aligned.basic.segment
        .ui.header #{title}
        +voting_full
        



template(name='question_view')
    with current_doc
        .ui.stackable.padded.grid
            .centered.row
                .ten.wide.center.aligned.column
                    .ui.large.inline.header #{title}
                    if can_edit
                        a.ui.icon.button(href="/question/#{_id}/edit")
                            i.pencil.icon
                        //- +remove_button
                    //- each tags 
                    //-     .ui.label #{this}
                    +voting_full
            .centered.row
                .ten.wide.column            
                    .ui.inline.header stats
                    .ui.icon.small.button.calc_stats
                        i.refresh.icon
                    .ui.list 
                        //- .item #{view_count} views
                        .item #{vote_count} votes
                        .item up
                            each upvoters
                                +user_info this
                        .item down
                            each downvoters
                                +user_info this

template(name='question_edit')
    with current_doc
        .ui.stackable.padded.grid
            .centered.row
                .ten.wide.center.aligned.column 
                    .ui.inline.header 
                        | edit '#{title}'
                    a.ui.big.icon.circular.button(href="/question/#{_id}/view" title='save')
                        //- |save
                        i.big.checkmark.icon
                    +remove_button
            .centered.row
                .ten.wide.column 
                    .ui.inline.grey.header question
                    .ui.fluid.big.input
                        input.edit_title(type='text' value=title autocomplete="off")
                    .ui.hidden.divider
                    .ui.inline.grey.header tags
                    div
                    .ui.icon.input
                        i.plus.icon
                        input.new_tag(type='text' autocomplete="off")
                    each tags
                        .ui.large.label
                            i.delete.icon.remove_element
                            |#{this}
                



template(name='remove_button')
    .ui.icon.circular.button.remove
        i.remove.icon




template(name='home')                    
    .ui.stackable.padded.grid
        if currentUser 
            .one.column.row
                .column
                    each unanswered_questions
                        +question_segment
        //- .one.column.row
        //-     .column
                //- .ui.inline.header selected users
                //- each selected_users
                //-     .ui.large.label
                //-         |#{this}
                //- .ui.inline.header add user
                //- .ui.input
                //-     input.add_username(type='text' placeholder='add username')
                //- each users 
                //-     .ui.button.add_user #{username}
        .one.column.row
            .center.aligned.column
                +question_cloud
